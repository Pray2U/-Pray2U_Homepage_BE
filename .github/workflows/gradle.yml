# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: checkout  
      uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Create Spring Properties
      run: |
        touch src/main/resources/application.properties 
        echo "${{secrets.APPLICATION_PROPERTIES}}" > src/main/resources/application.properties
      
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew clean build
      
    - name: Temporarily save build artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-artifact
        path: build
        retention-days: 1    
        
   ## 웹 이미지 빌드 및 도커허브에 push
    - name: web docker build and push
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_REPO }}/pray2u-backend
              
        
    ## docker compose up
    
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{secrets.USERNAME}}
        password: ${{secrets.PASSWORD}}
        port: ${{secrets.PORT}}
        script: |
          cd Pray2U_Homepage_BE
          cd p2uhomepage
          sudo docker rm -f $(docker ps -qa)
          sudo docker pull ${{ secrets.DOCKER_REPO }}/second-eyes-web
          docker-compose up -d
          docker image prune -f

 
