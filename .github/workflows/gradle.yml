# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle


on:
  push:
    branches: [ "develop" ]

permissions:
  contents: read


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          
    
        
          
          
      - name: Create Spring Properties
        run: |
         cd p2uhomepage
         cd src
         cd main
         cd resources
         touch application.properties
         ls
         echo "${{secrets.APPLICATION_PROPERTIES}}" > application.properties
         
      - name: Grant execute permission for gradlew
        run: |
           ls 
           cd p2uhomepage
           chmod +x gradlew
             
           

      - name: Build with Gradle
        run:  |
          ls
          cd p2uhomepage
          ./gradlew clean build

      - name: Temporarily save build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: build
          retention-days: 1

      ## 웹 이미지 빌드 및 도커허브에 push
      - name: web docker build and push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          ls
          cd p2uhomepage
          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }}/pray2u .
          docker push ${{ secrets.DOCKER_REPO }}/pray2u 
      

      ## docker compose up
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.HOST}}
          username: ${{secrets.USERNAME}}
          password: ${{secrets.PASSWORD}}
          port: ${{secrets.PORT}}
          script: |
            cd /
            ls
            C:\>cd C:\Users\jjong\OneDrive\바탕 화면\p2home\Pray2U_Homepage_BE\p2uhomepage
            docker rm -f $(docker ps -qa)
            docker pull ${{ secrets.DOCKER_REPO }}/pray2u
            docker-compose up -d
            docker image prune -f
         
           


     
